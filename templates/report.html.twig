{% extends "base.html.twig" %}

{% block title %}Report{% endblock %}

{% block body %}
        <article>
            <header>
                <h1>Redovisning MVC</h1>
            </header>
                <h4>Innehållsförteckning:</h4>
                <a href="#kmom01">Kmom01</a><br>
                <a href="#kmom02">Kmom02</a><br>
                <a href="#kmom03">Kmom03</a><br>
                <a href="#kmom04">Kmom04</a><br>
                <a href="#kmom05">Kmom05</a><br>
                <a href="#kmom06">Kmom06</a><br>
                
            <section>
                <br>
                <h2><a name="kmom01">Kmom01</a></h2><br>
                <p><b>
                    Berätta kort om dina förkunskaper och tidigare erfarenheter kring objektorientering.
                </b><br><br>
                    Jag har precis gått en kurs med objektorienterad programmering i Python, så jag tror att generellt har jag ganska bra koll på hur objekt fungerar. Detta är dock PHP vilket jag inte alls är lika van vid att använda och befarar inte kommer vara lika smidigt som Python. Det som jag ställer mig frågande till är syftet med denna kursen då vi precis har avslutat en objektorienterad Pythonkurs där vi använde ramverket Flask för att kunna göra applikationer på webben, vilket också verkar vara syftet här? Är detta kanske någon förlängning på den kursen, och isåfall varför använder vi PHP istället för att forsätta med Python?
                </p><br>

                <p><b>
                    Berätta kort om PHPs modell för klasser och objekt. Vilka är de grunder man behöver veta/förstå för att kunna komma igång och skapa sina första klasser?
                </b><br><br>
                    Rent generellt kan man skapa flera olika klasser, som är fristående varandra, beroende av någon annan klass eller ärver från en annan klass. Man kan med dessa klasser skapa olika objekt där varje objekt sedan i sin tur kan innehålla en mängd olika variabler som man själv bestämmer som då samtliga tillhör det objektet. Klasserna innehåller även funktioner/metoder som är unika för just den klassen och som kan användas i samband med det objektet som skapats. 
                </p><br>
        
                <p><b>
                    Reflektera kort över den kodbas, koden, strukturen som användes till uppgiften me/report, hur uppfattar du den?
                </b><br><br>
                    Den liknar den strukturen vi har haft i både Python och databaskursen, med att skapa objekt som man sedan kan använda/skicka till routes för att få upp till en webbsida vilket är bra då jag kan relatera till detta. Jag tycker dock att det ofta blir väldigt många filer ganska omgående vilket är överväldigande då tanken är att man ska lära sig något nytt, så blir det oftast istället mer fokus på att leta bland alla filer istället för att kunna fokusera på att lära sig ämnet.
                </p><br>
        
                <p><b>
                    Med tanke på artikeln “PHP The Right Way”, vilka delar in den finner du extra intressanta och värdefulla? Är det några särskilda områden som du känner att du vill veta mer om? Lyft fram några delar av artikeln som du känner mer värdefulla.
                </b><br><br>
                    Det verkar som att MYSQL inte är speciellt kompatibelt med PHP då den är väldigt "föråldrad" vilket är synd då vi precis har lärt oss att använda det i föregående kurs. Det finns däremot två andra, MYSQLITE och PDO. PHP beskrivs även som ett språk som bidrar till att man kan producera snabb och effektiv kod vilket inte är något jag kan relatera till än, men förhoppningsvis efter denna kursen så förstår jag vad de menar med detta.
                </p><br>
        
                <p><b>
                    Vilken är din TIL för detta kmom?
                </b><br><br>
                    Det känns som att denna veckan har mest handlat om att försöka hitta och förstå hur alla olika filer och delar hänger ihop. Som relativt ny i ämnet är det svårt att kunna ta till sig så många olika delar på så kort tid. Det mest konkreta jag känner att jag har lärt mig är allmänt hur det kan se ut när man använder objekt i PHP samt att man kan namnge sina routes i PHP för att sedan hänvisa till dessa i t.ex. navbaren för att kunna länka/bläddra mellan dem olika sidorna på ett smidigare sätt. 
                </p><br>
            </section>

            <section>
                <br>
                <h2><a name="kmom02">Kmom02</a></h2><br>
                <p><b>
                    Förklara kort de objektorienterade konstruktionerna arv, komposition, interface och trait och hur de används i PHP.
                </b><br><br>
                    Arv innebär att en klass ärver egenskaper från en annan klass. Klassen kan ärva alla publika och dolda egenskaper samt metoder från föräldrarklassen. Den kan sedan ha egna egenskaper och metoder.
                    <br><br>
                    Komposition tillåter en klass att innehålla en annan klass, t.ex. en bil klass kan innehålla en motor klass. Denna relation tillåter också att kod kan återanvändas men är av en mer flexibel form.
                    <br><br>
                    Interfaces tillåter att man använder en variation av olika klasser. Den tillåter en även att specificera vilka metoder en klass ska implementera.
                    <br><br>
                    Traits används då en klass behöver ärva från flera olika klasser. Traits deklarerar metoder som kan appliceras/användas i flera olika klasser. Metoderna kan vara av typerna public, private eller protected. 
                </p><br>

                <p><b>
                    Berätta om din implementation från uppgiften. Hur löste du uppgiften, är du nöjd/missnöjd, vilken förbättringspotential ser du i din koden och dina klasser?
                </b><br><br>
                    Jag är nöjd med hur jag har löst uppgiften. Jag har bara använt mig av en klass än så länge då jag tycker att det underlättar förståendet. Det är ofta det blir en rad olika filer och mappar så att det blir allt annat än enkelt att följa flödet, så jag tycker inte att man ska dela upp koden i onödan. Blir det så att flera funktioner då korten ska användas i något form av spel kan det eventuellt vara lämpligt att lägga till en ytterligare klass för dessa spelmetoder som i sin tur ärver från min ursprungliga Deck-klass. Jag har även skapat en metod för att återskapa en ny kortlek då kort har dragits ut, på så sett blir det smidigare att arbeta med sessionen och sedan ta bort de bortagna korten från den ursprungliga leken och återskapa en ny. 
                </p><br>
        
                <p><b>
                    Berätta hur det kändes att modellera ett kortspel med flödesdiagram och psuedokod. Var det något som du tror stödjer dig i din problemlösning och tankearbete för att strukturera koden kring en applikation?
                </b><br><br>
                    Jag tycker inte att det bidrog i någon större utsträckning i detta fallet. Jag tror eventuellt om man skulle jobba i en större grupp i ett större projekt med flera olika delar, så kunde man ha dragit nytta av något dylikt för att alla skulle ha samma utgångspunkt. 
                </p><br>
        
                <p><b>
                    Vilken är din TIL för detta kmom?
                </b><br><br>
                    Denna veckan har jag fördjupat mina kunskaper i PHP hur man jobbar med routes och hur man kan använda sessionen i PHP för att kunna spara ner olika värden. Jag har även lärt mig hur man kan skicka med ett värde, t.ex. ett nummer via URL'en så att man utifrån detta vet hur många kort som förväntas att dras. 
                </p><br>
            </section>

            <section>
                <br>
                <h2><a name="kmom03">Kmom03</a></h2><br>
                <p><b>
                    F
                </b><br><br>
                    T
                </p><br>

                <p><b>
                    F
                </b><br><br>
                    T
                </p><br>
        
                <p><b>
                    F
                </b><br><br>
                    T
                </p><br>
        
                <p><b>
                    F
                </b><br><br>
                    T
                </p><br>
        
                <p><b>
                    F
                </b><br><br>
                    T
                </p><br>
            </section>

            <section>
                <br>
                <h2><a name="kmom04">Kmom04</a></h2><br>
                <p><b>
                    F
                </b><br>
                    T
                </p><br><br>

                <p><b>
                    F
                </b><br><br>
                    T
                </p><br>
        
                <p><b>
                    F
                </b><br><br>
                    T
                </p><br>
        
                <p><b>
                    F
                </b><br><br>
                    T
                </p><br>
        
                <p><b>
                    F
                </b><br><br>
                    T
                </p><br>
            </section>

            <section>
                <br>
                <h2><a name="kmom05">Kmom05</a></h2><br>
                <p><b>
                    F
                </b><br><br>
                    T
                </p><br>

                <p><b>
                    F
                </b><br><br>
                    T
                </p><br>
        
                <p><b>
                    F
                </b><br><br>
                    T
                </p><br>
        
                <p><b>
                    F
                </b><br><br>
                    T
                </p><br>
        
                <p><b>
                    F
                </b><br><br>
                    T
                </p><br>
            </section>

            <section>
                <br>
                <h2><a name="kmom06">Kmom06</a></h2><br>
                <p><b>
                    F
                </b><br><br>
                    T
                </p><br>

                <p><b>
                    F
                </b><br><br>
                    T
                </p><br>
        
                <p><b>
                    F
                </b><br><br>
                    T
                </p><br>
        
                <p><b>
                    F
                </b><br><br>
                    T
                </p><br>
        
                <p><b>
                    F
                </b><br><br>
                    T
                </p><br>
            </section>
        </article>
{% endblock %}

